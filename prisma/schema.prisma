// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id       Int     @id @default(autoincrement())  // lowercase 'id'
  name     String
  email    String  @unique
  password String
  role     String
  notes    Note[]
  Bookmark Bookmark[]
  approvedNotes Note[] @relation("ApprovedNotes")
}

model Note {
  Id              Int      @id @default(autoincrement())
  title           String
  description     String

  // For audit trail during update
  oldTitle        String?  
  oldDescription  String?
  newTitle        String?
  newDescription  String?

  // Creator Info
  createdAt       DateTime @default(now())
  createdById     Int?
  createdByName   String?

  // Update Info
  updatedAt       DateTime?
  updatedBy       String?

  // (Optional) Soft Delete Info
  deletedAt       DateTime?
  deletedBy       String?

  Bookmark    Bookmark[]
  Bookmarkcount Int  @default(0)

  // Relationship
  user            User?     @relation(fields: [createdById], references: [id])


  
  // ðŸŸ© Approval Logic START
  status          String    @default("pending")     // "pending" | "approved"
  approvedById    Int?
  approvedAt DateTime? @default(now())
  approvedBy      User?     @relation("ApprovedNotes", fields: [approvedById], references: [id])
  // ðŸŸ© Approval Logic END
}

model Bookmark {
  id        String   @id @default(uuid())

  UserId    Int                         // âœ… changed to Int
  User      User     @relation(fields: [UserId], references: [id])

  NoteId    Int                         // âœ… changed to Int
  Note      Note     @relation(fields: [NoteId], references: [Id])

  createdAt DateTime @default(now())

  @@unique([UserId, NoteId])           // âœ… prevent duplicate bookmarks
}
